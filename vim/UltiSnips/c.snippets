#------------------------------------------------------------------------------
# --- Testing related snippets
#------------------------------------------------------------------------------
snippet ceedling_create_test "Create a dummy ceedling test" b
void test_${1:testName}(void){
   TEST_ASSERT(${2:1});
}
endsnippet

#------------------------------------------------------------------------------
# --- Function related snippets
#------------------------------------------------------------------------------
snippet function_minimal "Minimal function declaration, body, and comment" b
/*------------------------------------------------------------------------------
 * Function: ${1:Placeholder} 
 * @brief ${4}
 * @return ${2:void}
 * @param ${3:param1}
 *----------------------------------------------------------------------------*/
$2 $1($3){
   
   //Local declarations

}
endsnippet

#------------------------------------------------------------------------------
# --- Comment related snippets
#------------------------------------------------------------------------------
#Single line comment break
snippet comment_line_single "Comment line break - single" b
/*-------------- ${1:Placeholder} `!p snip.rv = (60-len(t[1]))*"-"`*/
endsnippet

#Multi line comment break
snippet comment_line_multiple "Comment line break - multiple" b
/*------------------------------------------------------------------------------
 * ${1:Placeholder} 
 *----------------------------------------------------------------------------*/
endsnippet

#Intentionally blank comment
snippet intentionally_blank "Intentionally blank comment." b
// Intentionally blank...
endsnippet

#------------------------------------------------------------------------------
# --- Bitwise related snippets
#------------------------------------------------------------------------------
snippet bitwise-operators-c "Basic bitwise operator macros for C" b
#define BIT(n)    (1<<(n))
#define BIT_SET(y, mask) (y |= (mask))
#define BIT_CLEAR(y, mask) (y &= ~(mask))
#define BIT_TOGGLE(y, mask) (y ^= (mask))
endsnippet

#------------------------------------------------------------------------------
# --- Allegion related snippets
#------------------------------------------------------------------------------

# Allegion copyright statement
snippet copyright_allegion "Allegion copyright header"
/*------------------------------------------------------------------------------
 * Copyright(c) `date +%Y` Allegion PLC as an unpublished work.
 *
 * The information contained herein is confidential property of Allegion PLC.
 * All rights reserved.  Reproduction, adaptation, or translation without the
 * express written consent of Allegion PLC is prohibited, except as allowed
 * under the copyright laws.
 *----------------------------------------------------------------------------*/
endsnippet

# Allegion C file header snippet.
snippet header_c_allegion "Allegion default C header"
/*------------------------------------------------------------------------------
 * File Name: `!v expand('%:t')` 
 * Purpose of File: ${1:Placeholder...}
 *----------------------------------------------------------------------------*/

/*-------------- INCLUDE FILES -----------------------------------------------*/
#include "`!v expand('%:t:r')`.h"
/*-------------- DEFINITIONS -------------------------------------------------*/
/*-------------- TYPEDEFS ----------------------------------------------------*/
/*-------------- FUNCTION PROTOTYPES -----------------------------------------*/
/*-------------- VARIABLE DEFINITIONS ----------------------------------------*/
/*-------------- FUNCTIONS DEFINITIONS ---------------------------------------*/
endsnippet

# Allegion H file header snippet.
snippet header_h_allegion "Allegion default H header"
/*------------------------------------------------------------------------------
 * File Name: `!v expand('%:t')` 
 * Purpose of File: Header file for ${1:Placeholder...}
 *----------------------------------------------------------------------------*/

/*-------------- HEADER INCLUDE FILES ----------------------------------------*/
/*-------------- DEFINITIONS -------------------------------------------------*/
/*-------------- MAPPING DEFINITIONS -----------------------------------------*/
/*-------------- ENUMERATIONS-------------------------------------------------*/
/*-------------- TYPES -------------------------------------------------------*/
/*-------------- PUBLIC/PUBLISHED API ----------------------------------------*/
endsnippet

snippet footer_allegion "Allegion change history footer" b
/*******************************************************************************
 * Change History: 
 *
 * Date     By     Description
 * -------- -----  --------------------------------------------------------------
 * `date +%02m/%02d/%02y` `echo $USER`  Initial creation.
 *******************************************************************************/
endsnippet


